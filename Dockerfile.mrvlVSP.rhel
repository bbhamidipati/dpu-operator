FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.23-openshift-4.19 AS builder
ARG TARGETOS
ARG TARGETARCH

RUN if [ "$TARGETARCH" = "arm64" ] ; then \
        dnf update -y && dnf install tar gawk gcc g++ git -y ; \
    fi

WORKDIR /workspace
COPY . .
# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN mkdir -p /bin && \
    CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} make build-marvell-vsp

WORKDIR /workspace
RUN if [ "$TARGETARCH" = "arm64" ] ; then \
        curl -L -k https://hyperrealm.github.io/libconfig/dist/libconfig-1.7.2.tar.gz && \
        tar -xvf libconfig-1.7.2.tar.gz && cd libconfig-1.7.2 && ./configure --prefix=/workspace/bin/ && \
        make && make install && cd - && \
        rm -fr /workspace/libconfig-1.7.2* ; \
    fi

RUN if [ "$TARGETARCH" = "arm64" ] ; then \
        git clone https://github.com/MarvellEmbeddedProcessors/pcie_ep_octeon_target.git && \
        cd /workspace/pcie_ep_octeon_target/target/libs/octep_cp_lib && \
        export CFLAGS="$CFLAGS -Wno-error=unused-result -DUSE_PEM_AND_DPI_PF=1" && make ; \
    fi

WORKDIR "/workspace/pcie_ep_octeon_target/target/apps/octep_cp_agent"
RUN if [ "$TARGETARCH" = "arm64" ] ; then \
        export OCTEP_PATH="/workspace/pcie_ep_octeon_target/target/libs/octep_cp_lib" && \
        export CFLAGS="$CFLAGS -I/workspace/bin/include -I$OCTEP_PATH/include" && \
        export LDFLAGS="-L/workspace/bin/lib -L$OCTEP_PATH" && \
        make && \
        cp bin/bin/octep_cp_agent /usr/bin/ && \
        cp cn106xx.cfg /usr/bin/ && \
        cp /workspace/bin/lib/libconfig* /usr/lib64/; \
    fi

# Use distroless as minimal base image to package the Marvell VSP binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM registry.ci.openshift.org/ocp/4.19:base-rhel9
ARG TARGETARCH

COPY --from=builder /workspace/bin/vsp-mrvl.${TARGETARCH} vsp-mrvl
COPY --from=builder /workspace/bin/lib/libconfig* /usr/lib64/
COPY --from=builder /workspace/pcie_ep_octeon_target/target/apps/octep_cp_agent/cn106xx.cfg /usr/bin/
COPY --from=builder /workspace/pcie_ep_octeon_target/target/apps/octep_cp_agent/bin/bin/octep_cp_agent /usr/bin/

RUN yum update -y \
    && yum install -y \
       net-tools \
       kmod \
       pciutils \
       make \
       iputils \
       iproute

WORKDIR /workspace

USER 0

COPY internal/daemon/vendor-specific-plugins/marvell/setup_vsp.sh /
RUN ["chmod", "+x", "/setup_vsp.sh"]
ENTRYPOINT ["/bin/sh", "-c", "/setup_vsp.sh"]
